# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C9jMCBWhtGWUJDZscjZQ6_iHrCvydT3u
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib notebook
import numpy as np
import pandas as pd
import seaborn as sn
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from sklearn.datasets import make_regression
#Make a Linear Regression Set
X_R1,y_R1=make_regression(n_samples=100,n_features=1,n_informative=1,bias=150.0,noise=30,random_state=0)
##75 to 25% training to test ratio
X_train,x_test,y_train,y_test=train_test_split(X_R1,y_R1,random_state=0)
from sklearn.linear_model import LinearRegression
#Normal Linear Regression doesn't need an alpha paramter
linreg=LinearRegression().fit(X_train,y_train)
print("The linear coef/w hat is {}".format(linreg.coef_))
print("The intercept/bias term is {}".format(linreg.intercept_))
print("The score for the training data is {:.2f}".format(linreg.score(X_train,y_train)))
print("The score for the testing data is {:.2f}".format(linreg.score(x_test,y_test)))
plt.figure(figsize=(5,4))
plt.title("Linear Regression:Least Squares")
plt.scatter(X_R1,y_R1,marker='o',s=50,alpha=0.8)
plt.plot(X_R1,X_R1*linreg.coef_+linreg.intercept_,'r-')

